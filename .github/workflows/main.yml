name: VPP Feed
on:
  schedule:
    - cron: "0 * * * *"   # 每小时自动运行
  workflow_dispatch:      # 允许在页面上手动触发
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps
        run: npm init -y && npm i node-fetch@3

      - name: Fetch & build feed.json
        run: |
          node - <<'NODE'
          import fetch from 'node-fetch';

          // 你可以先用这 3 个源跑通，再逐步加：
          const SOURCES = [
            {name:"CanalEnergia", url:"https://www.canalenergia.com.br/feed/", bucket:"C"},
            {name:"epbr", url:"https://epbr.com.br/feed/", bucket:"C"},
            {name:"Energy Storage News", url:"https://www.energy-storage.news/feed/", bucket:"A"},
          ];

          function clean(s){ return (s||"").replace(/<!\[CDATA\[|\]\]>/g,"").replace(/<[^>]+>/g,"").trim(); }
          function pick(s,re){ return ((s||"").match(re)||[])[1] || ""; }
          function parseRSS(xml){
            const out=[]; const blocks=xml.match(/<item[\s\S]*?<\/item>|<entry[\s\S]*?<\/entry>/gi)||[];
            for(const b of blocks){
              const title = clean(pick(b,/<title[^>]*>([\s\S]*?)<\/title>/i));
              const link  = pick(b,/<link[^>]*>([\s\S]*?)<\/link>/i) || pick(b,/<link[^>]*href="([^"]+)"/i);
              const date  = pick(b,/<pubDate[^>]*>([\s\S]*?)<\/pubDate>/i) || pick(b,/<updated[^>]*>([\s\S]*?)<\/updated>/i);
              out.push({ title, url: link, date: date || new Date().toISOString() });
            }
            return out;
          }

          const cutoff = Date.now() - 30*24*3600*1000; // 最近30天
          let items = [];
          for(const s of SOURCES){
            try{
              const r = await fetch(s.url, {headers:{'user-agent':'VPPBot/1.0'}});
              const xml = await r.text();
              const arr = parseRSS(xml).map(it => ({...it, source:s.name, bucket:s.bucket}));
              items = items.concat(arr);
            }catch(e){ /* 某源失败就跳过 */ }
          }
          // 去重 + 过滤 + 排序
          const seen = new Set();
          items = items.filter(x=>{
            const k=(x.url||'').split('#')[0]; if(!k||seen.has(k)) return false; seen.add(k); return true;
          }).filter(x=> Date.parse(x.date||'') >= cutoff)
            .sort((a,b)=> Date.parse(b.date) - Date.parse(a.date))
            .reverse()
            .slice(0,800);

          // 写入 feed.json
          const fs = await import('fs');
          fs.writeFileSync('feed.json', JSON.stringify({ ts:Date.now(), items }, null, 2));
          console.log('items:', items.length);
          NODE

      - name: Commit feed.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add feed.json
          git commit -m "update feed.json" || echo "no changes"
          git push
