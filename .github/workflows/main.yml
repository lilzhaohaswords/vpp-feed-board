name: VPP Feed

on:
  workflow_dispatch:      # 手动触发
  schedule:
    - cron: "0 * * * *"   # 每小时一次

permissions:
  contents: write         # 允许提交 feed.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build feed.json (Node18, no deps)
        shell: bash
        run: |
          node - <<'NODE'
          // Node 18 自带 fetch；这里无需任何 npm 依赖
          const SOURCES = [
            {name:"CanalEnergia", url:"https://www.canalenergia.com.br/feed/", bucket:"C"},
            {name:"epbr",          url:"https://epbr.com.br/feed/",            bucket:"C"},
            {name:"Energy Storage News", url:"https://www.energy-storage.news/feed/", bucket:"A"},
          ];

          function clean(s){ return (s||"").replace(/<!\[CDATA\[|\]\]>/g,"").replace(/<[^>]+>/g,"").trim(); }
          function pick(s,re){ return ((s||"").match(re)||[])[1] || ""; }
          function parseRSS(xml){
            const out=[]; const blocks=xml.match(/<item[\s\S]*?<\/item>|<entry[\s\S]*?<\/entry>/gi)||[];
            for(const b of blocks){
              const title = clean(pick(b,/<title[^>]*>([\s\S]*?)<\/title>/i));
              const link  = pick(b,/<link[^>]*>([\s\S]*?)<\/link>/i) || pick(b,/<link[^>]*href="([^"]+)"/i);
              const date  = pick(b,/<pubDate[^>]*>([\s\S]*?)<\/pubDate>/i) || pick(b,/<updated[^>]*>([\s\S]*?)<\/updated>/i);
              out.push({ title, url: link, date: date || new Date().toISOString() });
            }
            return out;
          }

          const cutoff = Date.now() - 30*24*3600*1000; // 30 天
          async function main(){
            let items = [];
            for(const s of SOURCES){
              try{
                const r = await fetch(s.url, {headers:{'user-agent':'VPPBot/1.0'}});
                const xml = await r.text();
                const arr = parseRSS(xml).map(it => ({...it, source:s.name, bucket:s.bucket}));
                items = items.concat(arr);
              }catch(e){ console.log('fail:', s.name, e.message); }
            }
            // 去重 + 过滤 + 排序
            const seen = new Set();
            items = items.filter(x=>{
              const k=(x.url||'').split('#')[0]; if(!k||seen.has(k)) return false; seen.add(k); return true;
            }).filter(x=> Date.parse(x.date||'') >= cutoff)
              .sort((a,b)=> Date.parse(b.date)-Date.parse(a.date))
              .reverse()
              .slice(0,800);

            const fs = await import('fs/promises');
            await fs.writeFile('feed.json', JSON.stringify({ ts:Date.now(), items }, null, 2));
            console.log('items:', items.length);
          }
          main();
          NODE

      - name: Commit feed.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add feed.json
          git commit -m "update feed.json" || echo "no changes"
          git push
